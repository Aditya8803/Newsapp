""NAVBAR""
import React  from 'react'
import {Link} from 'react-router-dom'
const Navbar = (props)=>{
    return (
      <div>
        <nav className="navbar fixed-top navbar-expand-lg navbar-dark bg-dark">
  <div className="container-fluid">
    <Link className="navbar-brand" to="/">NewsMonkey</Link>
    <button className="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span className="navbar-toggler-icon"></span>
    </button>
    <div className="collapse navbar-collapse" id="navbarSupportedContent">
      <ul className="navbar-nav me-auto mb-2 mb-lg-0">
<li className="nav-item"><Link className="nav-link active" aria-current="page" to="/general">General</Link>
        </li>
        {/* <li className="nav-item"><a className="nav-link" to="/about">About</a></li> */}
        <li className="nav-item"><Link className="nav-link" to="/business">Business</Link></li>
        <li className="nav-item"><Link className="nav-link" to="/entertainment">Entertainment</Link></li>
        {/* <li className="nav-item"><Link className="nav-link" to="/general">General</Link></li> */}
        <li className="nav-item"><Link className="nav-link" to="/health">Health</Link></li>
        <li className="nav-item"><Link className="nav-link" to="/science">Science</Link></li>
        <li className="nav-item"><Link className="nav-link" to="/sports">Sports</Link></li>
        <li className="nav-item"><Link className="nav-link" to="/technology">Technology</Link></li>
      </ul>
    </div>
  </div>
</nav>
      </div>
    )
  }

export default Navbar


""NEWS""

import React, {useEffect,useState} from 'react';
import NewsItem from './NewsItem';
import Spinner from './Spinner';
import PropTypes from 'prop-types';
import InfiniteScroll from "react-infinite-scroll-component";
const News =(props)=> {
const [articles, setArticles] = useState([])
const [loading, setLoading] = useState(true)
const [page, setPage] = useState(1)
const [totalResults, setTotalResults] = useState(0)
// const [hasMore, setHasMore] = useState(true)
// document.title = capitaliseFirstLetter(props.category) + "-NewsMonkey"
  const capitaliseFirstLetter = (string) =>{
    return string.charAt(0).toUpperCase() + string.slice(1);
  }

// https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=81aee4c6141848ba9a004adbc1b8e899

const  updateNews = async() => {
  props.setProgress(10);
  const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`
setLoading(true);
  let data = await fetch(url);
  let parsedData = await data.json()
setArticles(parsedData.articles)
setTotalResults(parsedData.totalResults)
setLoading(false);
    props.setProgress(100);
}
useEffect(() => {
  updateNews();
  // eslint-disable-next-line
}, [])



const handlePrevClick=async ()=>{
setPage(page-1)
updateNews();
}

const handleNextClick=async()=>{
setPage(page+1)
updateNews();
  }
  const fetchMoreData = async() => {
    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=81aee4c6141848ba9a004adbc1b8e899&page=${page+1}&pageSize=${props.pageSize}`;
    setPage(page+1)
    let data = await fetch(url);
  let parsedData = await data.json()
setArticles(articles.concat(parsedData.articles))
setTotalResults(parsedData.totalResults)
};

    return (
      <>
        <h1 className="text-center"style={{margin:'35px 0px',marginTop:'90px'}}>NewsMonkey - Top {capitaliseFirstLetter(props.category)} Headlines</h1>
        {loading && <Spinner/>}
        <InfiniteScroll
          dataLength={articles.length}
          next={fetchMoreData}
          hasMore={articles.length< totalResults}
          loader={articles.length < totalResults && <Spinner/>}
        >
      <div className="container">
        <div className="row">
        {articles.map((element)=>{
              return <div className="col-md-3" key={element.url}>
              <NewsItem  title={element.title?element.title:""} description={element.description?element.description:""} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} date={element.publishedAt} source={element.source.name}/>
            </div>
        })}
        </div>
      </div>
        </InfiniteScroll>
        </>
    )
  }
export default News
News.defaultProps = {
    country: 'in',
    pageSize:8,
    category:'general',
  }
News.propTypes = {
    country:PropTypes.string,
    pageSize:PropTypes.number,
    category:PropTypes.string,
  }


""NewsItem""
import React from 'react'

const NewsItem = (props)=> {

    let {title, description,imageUrl,newsUrl,author,date,source} = props;
   
    return (
      <div className="my-3">
        <div className="card">
          <span className="position-absolute top-0  translate-middle badge rounded-pill bg-danger" style={{left:"50%", zIndex:'1'}}>{source}</span>
          <img src={imageUrl?imageUrl:"https://tse2.mm.bing.net/th?id=OIP.ViHhuq4acKoGNBhoOMvikgHaJX&pid=Api&P=0&h=180"} className="card-img-top" alt="..."/>
            <div className="card-body">
                <h5 className="card-title">{title}</h5>
                <p className="card-text">{description}</p>
                <p className="card-text"><small className="text-muted">By {author?author:"Unknown"} on {new Date(date).toGMTString()}</small></p>
                <a href={newsUrl} target="_blank" rel="noreferrer" className="btn btn-sm btn-dark">Read More</a>
            </div>
          </div>
      </div>
    )
  }
export default NewsItem


""Spinner""
import {React} from 'react'
import loading from './loading.gif'
const Spinner=()=>{
    return (
      <div className="text-center">
        <img className="my-3" src={loading} alt="Loading" width="50px" height="50px"/>
      </div>
    )
  }
export default Spinner
